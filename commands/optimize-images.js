/**
 * –ï–¥–∏–Ω–µ–Ω —Å–∫—Ä–∏–ø—Ç –∑–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
 * –¢–æ–∑–∏ —Å–∫—Ä–∏–ø—Ç —Å—ä–∑–¥–∞–≤–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–∞–Ω–∏ –º–æ–±–∏–ª–Ω–∏ –∏ –¥–µ—Å–∫—Ç–æ–ø –≤–µ—Ä—Å–∏–∏ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
 *
 * –ó–∞ –¥–∞ –∏–∑–ø–æ–ª–∑–≤–∞—Ç–µ:
 * 1. –ü–æ—Å—Ç–∞–≤–µ—Ç–µ –∏–∑—Ö–æ–¥–Ω–æ—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ public –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ç–∞
 * 2. –ò–∑–ø—ä–ª–Ω–µ—Ç–µ: node commands/optimize-images.js –≤–∞—à–µ—Ç–æ-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.jpg
 */

const fs = require("fs");
const path = require("path");
const sharp = require("sharp");

// –ü—ä—Ç–∏—â–∞
const PUBLIC_DIR = path.join(__dirname, "../public");

// –ü–∞—Ä—Å–∏—Ä–∞–º–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∏—Ç–µ –æ—Ç –∫–æ–º–∞–Ω–¥–Ω–∏—è —Ä–µ–¥
const sourceFileName = process.argv[2]; // –ù–∞–ø—Ä–∏–º–µ—Ä: my-image.jpg
if (!sourceFileName) {
  console.error(
    "–ú–æ–ª—è, –∑–∞–¥–∞–π—Ç–µ –∏–º–µ –Ω–∞ –∏–∑—Ö–æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ! –ü—Ä–∏–º–µ—Ä: node commands/optimize-images.js my-image.jpg"
  );
  process.exit(1);
}

const SOURCE_PATH = path.join(PUBLIC_DIR, sourceFileName);
if (!fs.existsSync(SOURCE_PATH)) {
  console.error(
    `–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ—Ç–æ ${sourceFileName} –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ –≤ public –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è—Ç–∞!`
  );
  process.exit(1);
}

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const MOBILE_WIDTH = 640;
const MOBILE_HEIGHT = 400;
const DESKTOP_WIDTH = 955;
const DESKTOP_HEIGHT = 776;

// –ò–∑—Ö–æ–¥–Ω–∏ —Ñ–∞–π–ª–æ–≤–µ (–∏–∑–≤–ª–µ—á–µ–Ω–∏ –æ—Ç –∏–∑—Ç–æ—á–Ω–∏–∫–∞)
const fileNameWithoutExt = path.basename(
  sourceFileName,
  path.extname(sourceFileName)
);
const MOBILE_OUTPUT = path.join(PUBLIC_DIR, `${fileNameWithoutExt}-mobile.jpg`);
const DESKTOP_OUTPUT = path.join(
  PUBLIC_DIR,
  `${fileNameWithoutExt}-desktop.jpg`
);

// –°—ä—â–æ –≥–µ–Ω–µ—Ä–∏—Ä–∞–º–µ LCP –æ–ø—Ç–∏–º–∏–∑–∏—Ä–∞–Ω–∏ –≤–µ—Ä—Å–∏–∏
const MOBILE_LCP = path.join(PUBLIC_DIR, "hero-image-mobile.jpg");
const DESKTOP_LCP = path.join(PUBLIC_DIR, "hero-image-desktop.jpg");

/**
 * –§—É–Ω–∫—Ü–∏—è –∑–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–∞–Ω–µ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ç–∞
 */
async function optimizeImages() {
  console.log(`–ó–∞–ø–æ—á–≤–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${sourceFileName}`);

  try {
    // ------------------- –ú–û–ë–ò–õ–ù–ê –í–ï–†–°–ò–Ø -------------------
    console.log("\nüì± –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –º–æ–±–∏–ª–Ω–∞ –≤–µ—Ä—Å–∏—è...");

    // –û–±–∏–∫–Ω–æ–≤–µ–Ω–∞ –º–æ–±–∏–ª–Ω–∞ –≤–µ—Ä—Å–∏—è
    await sharp(SOURCE_PATH)
      .resize(MOBILE_WIDTH, MOBILE_HEIGHT, {
        fit: "cover",
        position: "center",
      })
      .jpeg({
        quality: 80,
        mozjpeg: true,
      })
      .toFile(MOBILE_OUTPUT);

    const mobileSize = (fs.statSync(MOBILE_OUTPUT).size / 1024).toFixed(2);
    console.log(`  ‚úì –°—ä–∑–¥–∞–¥–µ–Ω–∞: ${MOBILE_OUTPUT} (${mobileSize} KB)`);

    // LCP –º–æ–±–∏–ª–Ω–∞ –≤–µ—Ä—Å–∏—è (—Å—É–ø–µ—Ä –æ–ø—Ç–∏–º–∏–∑–∏—Ä–∞–Ω–∞)
    await sharp(MOBILE_OUTPUT)
      .jpeg({
        quality: 65,
        mozjpeg: true,
        chromaSubsampling: "4:2:0",
        trellisQuantisation: true,
        overshootDeringing: true,
        optimizeScans: true,
      })
      .toFile(MOBILE_LCP);

    const mobileLcpSize = (fs.statSync(MOBILE_LCP).size / 1024).toFixed(2);
    console.log(
      `  ‚úì LCP –≤–µ—Ä—Å–∏—è: ${MOBILE_LCP} (${mobileLcpSize} KB, ${(
        100 -
        (mobileLcpSize / mobileSize) * 100
      ).toFixed(0)}% –ø–æ-–º–∞–ª–∫–∞)`
    );

    // ------------------- –î–ï–°–ö–¢–û–ü –í–ï–†–°–ò–Ø -------------------
    console.log("\nüñ•Ô∏è –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –¥–µ—Å–∫—Ç–æ–ø –≤–µ—Ä—Å–∏—è...");

    // –û–±–∏–∫–Ω–æ–≤–µ–Ω–∞ –¥–µ—Å–∫—Ç–æ–ø –≤–µ—Ä—Å–∏—è
    await sharp(SOURCE_PATH)
      .resize(DESKTOP_WIDTH, DESKTOP_HEIGHT, {
        fit: "cover",
        position: "center",
      })
      .jpeg({
        quality: 85,
        mozjpeg: true,
      })
      .toFile(DESKTOP_OUTPUT);

    const desktopSize = (fs.statSync(DESKTOP_OUTPUT).size / 1024).toFixed(2);
    console.log(`  ‚úì –°—ä–∑–¥–∞–¥–µ–Ω–∞: ${DESKTOP_OUTPUT} (${desktopSize} KB)`);

    // LCP –¥–µ—Å–∫—Ç–æ–ø –≤–µ—Ä—Å–∏—è (—Å—É–ø–µ—Ä –æ–ø—Ç–∏–º–∏–∑–∏—Ä–∞–Ω–∞)
    await sharp(DESKTOP_OUTPUT)
      .jpeg({
        quality: 75,
        mozjpeg: true,
        chromaSubsampling: "4:2:0",
        trellisQuantisation: true,
        overshootDeringing: true,
        optimizeScans: true,
      })
      .toFile(DESKTOP_LCP);

    const desktopLcpSize = (fs.statSync(DESKTOP_LCP).size / 1024).toFixed(2);
    console.log(
      `  ‚úì LCP –≤–µ—Ä—Å–∏—è: ${DESKTOP_LCP} (${desktopLcpSize} KB, ${(
        100 -
        (desktopLcpSize / desktopSize) * 100
      ).toFixed(0)}% –ø–æ-–º–∞–ª–∫–∞)`
    );

    // ------------------- –û–ë–û–ë–©–ï–ù–ò–ï -------------------
    console.log("\n‚úÖ –í—Å–∏—á–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–∞–Ω–∏ —É—Å–ø–µ—à–Ω–æ!");
    console.log("\nüìã –û–±–æ–±—â–µ–Ω–∏–µ:");
    console.log(`  - –ú–æ–±–∏–ª–Ω–∞ –≤–µ—Ä—Å–∏—è: ${MOBILE_OUTPUT} (${mobileSize} KB)`);
    console.log(`  - –î–µ—Å–∫—Ç–æ–ø –≤–µ—Ä—Å–∏—è: ${DESKTOP_OUTPUT} (${desktopSize} KB)`);
    console.log(`  - LCP –ú–æ–±–∏–ª–Ω–∞: ${MOBILE_LCP} (${mobileLcpSize} KB)`);
    console.log(`  - LCP –î–µ—Å–∫—Ç–æ–ø: ${DESKTOP_LCP} (${desktopLcpSize} KB)`);

    console.log("\nüìù –í–ê–ñ–ù–û: LCP –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è—Ç–∞ —Å–∞ –∑–∞–ø–∏—Å–∞–Ω–∏ –∫–∞—Ç–æ:");
    console.log(`  - /hero-image-mobile.jpg (–∑–∞ –º–æ–±–∏–ª–Ω–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞)`);
    console.log(`  - /hero-image-desktop.jpg (–∑–∞ –¥–µ—Å–∫—Ç–æ–ø —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞)`);
    console.log(
      "  –¢–µ –≤–µ—á–µ —Å–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∏—Ä–∞–Ω–∏ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ—Ç–æ –∏ –≥–æ—Ç–æ–≤–∏ –∑–∞ –∏–∑–ø–æ–ª–∑–≤–∞–Ω–µ."
    );
  } catch (error) {
    console.error("‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–∞–Ω–µ:", error);
  }
}

// –°—Ç–∞—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Å–∫—Ä–∏–ø—Ç–∞
optimizeImages();
